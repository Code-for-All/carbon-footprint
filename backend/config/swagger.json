{
    "swagger": "2.0",
    "externalDocs": {
        "description": "swagger.json",
        "url": "https://footprint.codefor.nl/swagger.json"
    },
    "info": {
        "description": "API for calculating your Carbon footprint",
        "version": "0.1.0",
        "title": "Footprint API",
        "termsOfService": "https://footprint.codefor.nl/terms/",
        "contact": {
            "email": "apiteam@codefor.nl"
        },
        "license": {
            "name": "GPLv3",
            "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
        }
    },
    "basePath": "/",
    "tags": [
        {
            "name": "person",
            "description": "Users and people traveling"
        },
        {
            "name": "travel",
            "description": "A part of a journey"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/persons": {
            "get": {
                "tags": [
                    "person"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Person"
                            }
                        }
                    }
                }
            }
        },
        "/person": {
            "post": {
                "tags": [
                    "person"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:travel",
                            "read:travel"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "person"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:person",
                            "read:person"
                        ]
                    }
                ]
            }
        },
        "/person/{id}": {
            "get": {
                "tags": [
                    "person"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "person"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:person",
                            "read:person"
                        ]
                    }
                ]
            }
        },
        "/journeys": {
            "get": {
                "tags": [
                    "journey"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Journey"
                            }
                        }
                    }
                }
            }
        },
        "/journey": {
            "post": {
                "tags": [
                    "journey"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Journey"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:journey",
                            "read:journey"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "journey"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Journey"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:journey",
                            "read:journey"
                        ]
                    }
                ]
            }
        },
        "/journey/{id}": {
            "get": {
                "tags": [
                    "journey"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Journey"
                        }
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "journey"
                ],
                "operationId": "deleteJourney",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:journey",
                            "read:journey"
                        ]
                    }
                ]
            }
        },
        "/travels": {
            "get": {
                "tags": [
                    "travel"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Travel"
                            }
                        }
                    }
                }
            }
        },
        "/travel": {
            "post": {
                "tags": [
                    "travel"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Travel"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:travel",
                            "read:travel"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "travel"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Travel"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:travel",
                            "read:travel"
                        ]
                    }
                ]
            }
        },
        "/travel/{id}": {
            "get": {
                "tags": [
                    "travel"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Travel"
                        }
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "travel"
                ],
                "operationId": "deleteTravel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "footprint_auth": [
                            "write:travel",
                            "read:travel"
                        ]
                    }
                ]
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "logoutUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "footprint_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://footprint.codefor.nl/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:travel": "modify travels in your account",
                "read:travel": "read your travels",
                "write:person": "modify your account or other persons you have access to",
                "read:person": "read persons that you have access to"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "LocationType": {
            "type": "string",
            "enum": [
                "Address",
                "Airport", 
                "Harbour", 
                "Train Station",
                "Bus Station",
                "Marina",
                "Place",
                "Venue"
            ]
        },
        "TransportType": {
            "type": "string",
            "enum": [
                "Plane",
                "Car",
                "Bike",
                "Foot",
                "Bus",
                "Train",
                "Boat",
                "Taxi"
            ]
        },
        "Person": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                },
                "type": {
                    "$ref": "#/definitions/LocationType"
                },
                "nominatimId": {
                    "type": "string"
                }
            }
        },
        "Journey": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "person": {
                    "$ref": "#/definitions/Person"
                },
                "travels": {
                    "nullable": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Travel"
                    }
                }
            }
        },
        "Travel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "departedAt": {
                    "type": "string",
                    "format": "date"
                },
                "arrivedAt": {
                    "type": "string",
                    "format": "date"
                },
                "transport": {
                    "$ref": "#/definitions/TransportType"
                },
                "Departure": {
                    "$ref": "#/definitions/Location"
                },
                "Arrival": {
                    "$ref": "#/definitions/Location"
                }
            }
        }
    }
}